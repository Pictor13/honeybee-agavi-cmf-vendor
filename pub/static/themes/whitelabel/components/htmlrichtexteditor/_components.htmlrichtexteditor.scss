.hb-field {
    // in case js doesn't load
    &.jsb_ {
        > .hb-field__content > .hb-field__value {
            > .editor { display: none; }
        }
    }
}

// htmlrichtexteditor should look like a normal textarea by default
// and have a fixed height with a scrollbar â€“ use ".editor--autogrow" otherwise
.editor-hrte {
    @include textarea;
    min-width: 10em;
    min-height: 2em;
    height: 12.2em;
    max-height: 30em;
    overflow: auto;
    resize: vertical;
}

.editor-menu {
    @extend %list-bare;
    @extend %pack;
    margin-bottom: 0.2em;

    .item {
        @extend %pack__item;
        text-align: center;
        vertical-align: middle;
    }

    button {
        @include button-normal-mutating;
    }

    [data-editor-action] {
        width: 1.2em;
        height: 1.2em;
        background: transparent no-repeat center;
        background-size: contain;

        &:disabled {
            opacity: 0.3;
        }

        span {
            @include visuallyhidden;
        }
    }

    [data-editor-action="bold"] {
        background-image: url('binaries/icons/hrte/bold.svg');
    }

    [data-editor-action="italic"] {
        background-image: url('binaries/icons/hrte/italic.svg');
    }

    [data-editor-action="underline"] {
        background-image: url('binaries/icons/hrte/underline.svg');
    }

    [data-editor-action="strike"] {
        background-image: url('binaries/icons/hrte/strikethrough.svg');
    }

    [data-editor-action="link"] {
        background-image: url('binaries/icons/hrte/addlink.svg');
    }

    [data-editor-action="unlink"] {
        background-image: url('binaries/icons/hrte/unlink.svg');
    }

    [data-editor-action="ol"] {
        background-image: url('binaries/icons/hrte/ordered-list.svg');
    }

    [data-editor-action="ul"] {
        background-image: url('binaries/icons/hrte/unordered-list.svg');
    }

    [data-editor-action="undo"] {
        background-image: url('binaries/icons/hrte/undo.svg');
    }

    [data-editor-action="redo"] {
        background-image: url('binaries/icons/hrte/redo.svg');
    }

    [data-editor-action="autogrow"] {
        background: none;
        width: auto;
    }

    [data-editor-action="empty"] {
        background-image: url('binaries/icons/hrte/trash.svg');
    }
}

.editor-count {
    padding: $small-spacing 0 0 $small-spacing;
}

.mfp-content .editor-popup {
    display: block;
}

.editor-popup {
    display: none;
    background: #fff;
    padding: 20px 30px;
    text-align: left;
    max-width: 650px;
    margin: 20px auto;
    position: relative;
}

.editor-popup__inputs {
    @extend %list-bare;
    margin-bottom: 1em;

    li {
        margin-bottom: 1em;
    }
}

.editor-popup__buttons {
    @extend %list-bare;
    @extend %pack;

    li {
        @extend %pack__item;
        text-align: center;
    }
}

.editor-popup__accept {
    @include button-emphasized-mutating;
}

.editor-popup__cancel {
    @include button-emphasized-navigational;
}

// modifiers

.editor--autogrow .editor-hrte {
    max-height: none;
    height: auto;
    overflow: none;
    resize: none;
}

textarea:read-only ~ .editor .editor-hrte {
    @include input-textual-colors-disabled;
}
.editor--readonly .editor-hrte {    // separate selector: pseudo-class breaks the rule on IE
    @include input-textual-colors-disabled;
}

textarea.invalid ~ .editor,
textarea:invalid ~ .editor,
.editor--invalid {
    .editor-hrte:not(:focus) {
        // input-textual-colors-invalid
        background-color: color(background-blank);
        border-color: color(destructive-primary);
    }

    .editor-count {
        // input-textual-colors-invalid
        color: color(destructive-primary);
    }
}
