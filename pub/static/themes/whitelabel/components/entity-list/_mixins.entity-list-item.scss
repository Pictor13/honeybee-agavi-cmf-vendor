@mixin entity-list-item() {
    .hb-embed-item {
        position: relative;
        padding-top: 0;
        padding-bottom: 0;
        border-top: 1px solid color(lines);

        &:focus { outline: 0; }

        // Embed actions
        .hb-embed-actions {
            width: 100%;
            @extend %hb-embed-actions--large;

            @include media-query(lap-and-up) {
                display: inline-flex;
                flex-direction: row;
                justify-content: flex-end;
            }

            // override general declaration from 'entity-list'
            .hb-embed-action__none.hb-embed-action__none { display: none; }
        }

        &:first-child {
            border-top-width: 0;
            .hb-embed-action__up { display: none; }
        }
        &:last-child {
            margin-bottom: 0;
            .hb-embed-action__down { display: none; }
        }
    }

    // Embed-item parts
    .hb-embed-item__header {
        // layout
        display: flex;
        flex-direction: column;

        // style
        background-color: color(white);
    }

    .hb-embed-item__toggle,
    .hb-embed-item__controls {
        // layout
        flex: 1 1 auto;
        display: inline-flex;   // remove unwanted small spacing on Firefox
    }

    .hb-embed-item__toggle {
        display: block; // keep markup valid
    }

    // .hb-embed-item__glance {}

    .hb-embed-item__content {
        // collapsed by default
        display: none;

        // style
        background-color: color(lightgrey2);
    }

    // Embed-item expand/collapse
    .hb-embed-item__trigger { @include visuallyhidden; }
    .hb-embed-item__trigger:checked ~ .hb-embed-item__content { display: block; }

    .hb-embed-item__toggle {
        display: inline-block;
        vertical-align: top;
        position: initial;
    }
}



/* Embed item highlighting */
@mixin entity-list-item--highlight() {

    // item highlighting - general
    &:not(.hb-entity-list__inline-mode) {
        > .hb-field__value > .hb-entity-list {
            > .hb-js-embed-item--is_focused {
                @include entity-list-item--focused;
            }
        }
    }

    // item highlighting - inline-mode
    > .hb-field__value > .hb-entity-list {

        // grandparent item
        > .hb-embed-item {
            // no direct descendant operator (>) because there is not yet a defined styling beyond the second nested level
            > .hb-entity-list__inline-mode > .hb-field__value > .hb-entity-list {

                // parent item
                > .hb-embed-item {
                    &.hb-embed-item--is_collapsible.hb-js-embed-item--is_focused {
                        // focus parent item (not the grandparent)
                        @include entity-list-item--focused;
                    }
               }
            }
        }
    }
}



@mixin entity-list-item--focused() {
    position: relative;
    @include zindex("base", 1);

    // pseudo-element prevents siblings from hiding outline on adjacent sides
    &:before {
        content: "";
        position: absolute;
        top: 0; right: 0; bottom: 0; left: 0;
        z-index: -1;
        box-shadow: 0 0 1px 3px color(outline);
    }
}