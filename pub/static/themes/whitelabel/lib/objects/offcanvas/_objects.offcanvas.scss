// -------------------------------------------------------------------------
// # offcanvas
//
// CSS only offcanvas mixin that transitions a panel element into the viewport when toggled.
// The toggle is a label that triggers a visually hidden checkbox. A backdrop element may be
// used as well to have a convenient way of closing the panel.
//
// ## Usage
//
// @include(
//     $classname_prefix: prefix to use for classnames, e.g. 'offcanvas' or 'sidebar'
//     $toggle-position: one of 'top-left', 'top-right', 'bottom-right', 'bottom-left'
//     $panel-position: one of 'left', 'right', 'top', 'bottom'
//     $panel-size: absolute size of panel (e.g. 20rem or 400px)
//     $panel-duration: animation duration for transition (e.g. .15s)
//     $zindex: integer value to use as z-index for the backdrop (the panel gets +1 of that value)
//     $toggle-zindex: integer value to use as z-index for the toggle (gets $zindex+2 by default)
// )
//
// The first argument is the most important as it defines the names of classes. A prefix
// of "foo" leads to BEM style classes expected to be in the markup like
// "foo__trigger", "foo__toggle", "foo__backdrop" and "foo__panel"
//
// The only rules for the markup are, that is looks like below. The elements are on the
// same level and the trigger element is the topmost as sibling selectors  (~) are used.
//
// ## Example markup and scss
//
// ```html
// <div class="sidebar">
//     <input type="checkbox" id="sidebar-trigger" class="sidebar__trigger">
//     <label for="sidebar-trigger" class="sidebar__toggle">Sidebar</label>
//     <label for="sidebar-trigger" class="sidebar__backdrop"></label>
//     <div class="sidebar__panel">
//         <p>Lorem ipsum...</p>
//     </div>
// </div>
// ```
//
// ```scss
// .sidebar {
//     @include offcanvas('sidebar', 'bottom-right', 'right', 20rem, .1s, 8000, 100);
//
//     .sidebar__toggle {
//         background: blue;
//     }
//
//     .sidebar__panel {
//         background: darkred;
//         color: white;
//     }
// }
// ```
//
// When multiple offcanvas elements are in use on a page the $toggle-zindex (the 100 above) should
// be set to a value lower than the lowest $zindex of all panels. There's no validation for that
// built-in as your mileage of which panels overlap which toggles and backdrops may vary.
//
// -------------------------------------------------------------------------


$offcanvas-default-name: 'offcanvas' !default;
$offcanvas-default-toggle-position: 'top-right' !default;
$offcanvas-default-panel-position: 'right' !default;
// @todo we may need to adjust the translation according to the given unit (size of 50% needs translateX(-100%))
$offcanvas-default-size: 16rem !default;
$offcanvas-default-duration: .15s !default;
$offcanvas-default-zindex: 9000 !default;
$offcanvas-default-toggle-zindex: 9002 !default;
$offcanvas-default-panel-selector: '.offcanvas__panel' !default;
$offcanvas-default-toggle-selector: '.offcanvas__toggle' !default;
$offcanvas-default-backdrop-selector: '.offcanvas__backdrop' !default;



@mixin offcanvas-panel-defaults($duration, $panel-zindex) {
    position: fixed;
    overflow-y: auto;
    z-index: $panel-zindex;

    transition-property: all;
    transition-duration: $duration;
    transition-timing-function: ease-out;

    &.is-visible {
        @include offcanvas-reset;
    }
}

@mixin offcanvas-reset {
    transform: translateX(0);
    transform: translateY(0);
}

@mixin offcanvas-panel-left(
    $size: $offcanvas-default-size,
    $duration: $offcanvas-default-duration,
    $zindex: $offcanvas-default-zindex + 1
) {
    @include offcanvas-panel-defaults($duration, $zindex);
    top: 0;
    left: 0;
    bottom: 0;
    width: $size;
    transform: translateX(-100%);

    @content;
}

@mixin offcanvas-panel-right(
    $size: $offcanvas-default-size,
    $duration: $offcanvas-default-duration,
    $zindex: $offcanvas-default-zindex + 1
) {
    @include offcanvas-panel-defaults($duration, $zindex);
    top: 0;
    right: 0;
    bottom: 0;
    width: $size;
    transform: translateX(100%);

    @content;
}

@mixin offcanvas-panel-bottom(
    $size: $offcanvas-default-size,
    $duration: $offcanvas-default-duration,
    $zindex: $offcanvas-default-zindex + 1
) {
    @include offcanvas-panel-defaults($duration, $zindex);
    left: 0;
    right: 0;
    bottom: 0;
    height: $size;
    transform: translateY(100%);

    @content;
}

@mixin offcanvas-panel-top(
    $size: $offcanvas-default-size,
    $duration: $offcanvas-default-duration,
    $zindex: $offcanvas-default-zindex + 1
) {
    @include offcanvas-panel-defaults($duration, $zindex);
    top: 0;
    left: 0;
    right: 0;
    height: $size;
    transform: translateY(-100%);

    @content;
}

@mixin offcanvas-toggle(
    $toggle-zindex: $offcanvas-default-toggle-zindex
) {
    position: fixed;
    z-index: $toggle-zindex;
    cursor: pointer;

    @content;
}

@mixin offcanvas-toggle-top-left(
    $zindex: $offcanvas-default-toggle-zindex
) {
    @include offcanvas-toggle($zindex);
    top: 0;
    left: 0;

    @content;
}

@mixin offcanvas-toggle-top-right(
    $zindex: $offcanvas-default-toggle-zindex
) {
    @include offcanvas-toggle($zindex);
    top: 0;
    right: 0;

    @content;
}

@mixin offcanvas-toggle-bottom-right(
    $zindex: $offcanvas-default-toggle-zindex
) {
    @include offcanvas-toggle($zindex);
    bottom: 0;
    right: 0;

    @content;
}

@mixin offcanvas-toggle-bottom-left(
    $zindex: $offcanvas-default-toggle-zindex
) {
    @include offcanvas-toggle($zindex);
    bottom: 0;
    left: 0;

    @content;
}

@mixin offcanvas-toggle-middle-left(
    $zindex: $offcanvas-default-toggle-zindex
) {
    @include offcanvas-toggle($zindex);
    bottom: 50%;
    left: 0;

    @content;
}

@mixin offcanvas-toggle-middle-right(
    $zindex: $offcanvas-default-toggle-zindex
) {
    @include offcanvas-toggle($zindex);
    bottom: 50%;
    right: 0;

    @content;
}

@mixin offcanvas-toggle-center-top(
    $zindex: $offcanvas-default-toggle-zindex
) {
    @include offcanvas-toggle($zindex);
    top: 0;
    left: 50%;

    @content;
}

@mixin offcanvas-toggle-center-bottom(
    $zindex: $offcanvas-default-toggle-zindex
) {
    @include offcanvas-toggle($zindex);
    bottom: 0;
    left: 50%;

    @content;
}

@mixin offcanvas-backdrop-visible(
    $zindex: $offcanvas-default-zindex
) {
    display: block;
    position: fixed;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    width: auto;
    height: auto;
    z-index: $zindex;
    background: rgba(0, 0, 0, 0.5);
    cursor: pointer;

    @content;
}

@mixin offcanvas-backdrop-hidden() {
    display: none;

    @content;
}

@mixin offcanvas-trigger(
    $panel-selector: $offcanvas-default-panel-selector,
    $toggle-selector: $offcanvas-default-toggle-selector,
    $backdrop-selector: $offcanvas-default-backdrop-selector,
    $zindex: $offcanvas-default-zindex,
    $checked-zindex: $offcanvas-default-toggle-zindex
) {
    // hide trigger checkbox by default
    @include visuallyhidden-fixed;

    &:focus ~ #{$toggle-selector} {}

    // set a different z-index for the toggle when the pabnel is visible to allow stacking of panels
    &:checked ~ #{$toggle-selector} {
        z-index: $checked-zindex;
    }

    // show panel when trigger checkbox is checked
    &:checked ~ #{$panel-selector} {
        @include offcanvas-reset;
    }

    // show backdrop when trigger checkbox is checked
    &:checked ~ #{$backdrop-selector} {
        @include offcanvas-backdrop-visible($zindex)
    }

    @content;
}


@mixin offcanvas(
    $name: $offcanvas-default-name,
    $toggle-position: $offcanvas-default-toggle-position,
    $panel-position: $offcanvas-default-panel-position,
    $panel-size: $offcanvas-default-size,
    $panel-duration: $offcanvas-default-duration,
    $zindex: $offcanvas-default-zindex,
    $toggle-zindex: $zindex + 2,//offcanvas-default-toggle-zindex,
    $active-toggle-zindex: $zindex + 2//'default'
) {
    $panel-zindex: $zindex + 1;
//    $toggle-zindex: $zindex + 2 !default;
//    $active-toggle-zindex: $toggle-zindex !default;
//    @if $active-toggle-zindex == 'default' {
//        $active-toggle-zindex: $toggle-zindex;
//    }

    // we use at-root to have correct parent selector nesting when including nested mixins
    @at-root {

        // visually hide the trigger checkbox
        .#{$name}__trigger {
            @include offcanvas-trigger('.#{$name}__panel', '.#{$name}__toggle', '.#{$name}__backdrop', $zindex, $active-toggle-zindex);
        }

        // hide backdrop when trigger checkbox is not checked
        #{$name}__backdrop {
            @include offcanvas-backdrop-hidden;
        }

        // show toggle label on one of the edges of the viewport
        .#{$name}__toggle {
            @if $toggle-position == 'top-left' {
                @include offcanvas-toggle-top-left($toggle-zindex);
            } @else if $toggle-position == 'top-right' {
                @include offcanvas-toggle-top-right($toggle-zindex);
            } @else if $toggle-position == 'bottom-right' {
                @include offcanvas-toggle-bottom-right($toggle-zindex);
            } @else if $toggle-position == 'bottom-left' {
                @include offcanvas-toggle-bottom-left($toggle-zindex);
            } @else if $toggle-position == 'middle-right' {
                @include offcanvas-toggle-middle-right($toggle-zindex);
            } @else if $toggle-position == 'middle-left' {
                @include offcanvas-toggle-middle-left($toggle-zindex);
            } @else if $toggle-position == 'center-top' {
                @include offcanvas-toggle-center-top($toggle-zindex);
            } @else if $toggle-position == 'center-bottom' {
                @include offcanvas-toggle-center-bottom($toggle-zindex);
            } @else {
                @warn 'Only top-left, top-right, bottom-right, bottom-left, middle-right, middle-left, center-top or center-bottom are allowed for toggle position!'
            }
        }

        @if $panel-position == null {
            @if str-index($toggle-position, 'left') {
                $panel-position: 'left';
            } @else {
                $panel-position: 'right';
            }
        }

        .#{$name}__panel {
            @if $panel-position == 'left' {
                @include offcanvas-panel-left(
                    $size: $panel-size,
                    $duration: $panel-duration,
                    $zindex: $panel-zindex
                );
            } @else if $panel-position == 'right' {
                @include offcanvas-panel-right(
                    $size: $panel-size,
                    $duration: $panel-duration,
                    $zindex: $panel-zindex
                );
            } @else if $panel-position == 'top' {
                @include offcanvas-panel-top(
                    $size: $panel-size,
                    $duration: $panel-duration,
                    $zindex: $panel-zindex
                );
            } @else if $panel-position == 'bottom' {
                @include offcanvas-panel-bottom(
                    $size: $panel-size,
                    $duration: $panel-duration,
                    $zindex: $panel-zindex
                );
            } @else {
                @warn 'Only left, right, top and bottom are allowed for panel position!'
            }
        }
    }

    @content;
}

