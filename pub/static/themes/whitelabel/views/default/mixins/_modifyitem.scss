$item-margin: $panel-margin !default;

@mixin modifyitem-view() {
    .hb-validation-messages {
        display: none;
        margin-bottom: $base-spacing;

        &.invalid, &:invalid {
            display: block;
        }

        ul {
            margin-left: $base-spacing;
        }

        li {
            color: map-get($colors, red);
        }
    }

    ul.errors {
        margin: 0;
    }

    .hb-modifyitem-wrapper {

    }

    .hb-modifyitem-wrapper__header {
        margin: 0;
        padding: 0 $base-spacing 0 $base-spacing;
    }

    .hb-modifyitem-wrapper__content {
        padding: $base-spacing;
    }

    .hb-row {
        @extend %layout;
    }

    .hb-cell {
        @extend %layout__item;
        @extend %lap-and-up-1-of-2;
        @extend %desk-wide-1-of-3;
    }

    .hb-field {
        // reset padding, except when the panel is hidden to make a "component/field" look like a "object/sheet"
        // not achievable with the more explicit selector (waiting for CSS4):
        //      .hb-panel--hidden:not(.hb-field .hb-panel) > .hb-panel__content
        .hb-panel--hidden > .hb-panel__content {
            padding: $base-spacing;
        }
    }

    /**
        embed/reference styles start here
        @todo move to a dedicated component files

        note: be specific with the child selectors to avoid recursion issues on nested lists
    */
    .hb-field__embedded-entity-list,
    .hb-field__entity-reference-list {

        &.jsb_ {
            > .hb-field__content {
                padding-top: 0;

                .hb-embed-type-selector {
                    display: none;
                }
            }
        }

        .not-displayed {
            display: none;
        }

        .highlight {
            background: white;
        }

        .hb-entity-list {
            list-style: none;
            margin: 0;
            padding: 0;

            .hb-embed-item {
                position: relative;
                padding-top: 0;
                padding-bottom: 0;
                border-top: 1px solid color(lines);
                &:first-child { border-top-width: 0; }

                &:focus {
                    outline: 0;
                }

                .hb-panel {
                    margin: 0;
                }

                .hb-cell {
                    @extend %layout__item;
                    @extend %lap-and-up-1-of-1;
                    margin-bottom: 0;
                }

                .hb-embed-actions {
                    width: 100%;

                    @extend %hb-embed-actions--large;

                    & .hb-embed-action__none {
                        display: none;
                    }
                    @include media-query(lap-and-up) {
                        display: inline-flex;
                        flex-direction: row;
                        justify-content: flex-end;
                    }
                }

                &:hover {
                    .hb-embed-actions {
                        //display: table;
                    }
                }

                &:first-child {
                    .hb-embed-action__up {
                        display: none;
                    }
                }

                &:last-child {
                    .hb-embed-action__down {
                        display: none;
                    }
                    margin-bottom: 0;
                }
            }

            &.hb-entity-templates {
                display: none;
            }
        }

        // Embed-item parts
        .hb-embed-item__header {
            // layout
            display: flex;
            flex-direction: column;

            // style
            background-color: color(white);
        }
        .hb-embed-item__toggle,
        .hb-embed-item__controls {
            // layout
            flex: 1 1 auto;
        }

        .hb-embed-item__toggle {
            display: block; // keep markup valid
        }

        // .hb-embed-item__glance {
        // }

        .hb-embed-item__content {
            // collapsed by default
            display: none;

            background-color: color(lightgrey2);
        }

        // Embed-item expand/collapse
        .hb-embed-item__trigger { @include visuallyhidden; }
        .hb-embed-item__trigger:checked ~ .hb-embed-item__content { display: block; }

        // .hb-embed-item__trigger:focus ~ .hb-embed-item__header { // embed-item trigger styling }

        .hb-embed-item__toggle {
            display: inline-block;
            vertical-align: top;
            position: initial;
        }

        &:not(.hb-entity-list__inline-mode) {
            > .hb-field__value > .hb-entity-list {
                > .hb-js-embed-item--is_focused {
                    @include focused-item;
                }
            }
        }

        // Embed actions
        .hb-embed-action__icon {
            position: relative;

            @include media-query(palm) {
                width: 100%;
            }
        }
        .hb-embed-action__up .hb-embed-action__icon { @include hb-icon-pseudo-el(( icon-name: arrow-bold-up, size: 1.5 )); }
        .hb-embed-action__down .hb-embed-action__icon { @include hb-icon-pseudo-el(( icon-name: arrow-bold-down, size: 1.5 )); }
        .hb-embed-action__none .hb-embed-action__icon { @include hb-icon-pseudo-el(( icon-name: minus, size: 1.5 )); }
        .hb-embed-action__delete .hb-embed-action__icon { @include hb-icon-pseudo-el(( icon-name: cross, size: 1.5 )); }
        .hb-embed-action__duplicate .hb-embed-action__icon { @include hb-icon-pseudo-el(( icon-name: copy, size: 1.5 )); }

        @include media-query(lap-and-up) {
            .hb-embed-action__icon:after {
                content: attr(data-action-caption);
                // restore font-size set to 0 from icon mixin
                font-size: 1rem !important;
                // align vertically to icon
                display: inline-table;
            }
        }

        &.jsb_ {
            .hb-entity-templates {
                display: block;

                .hb-embed-item {
                    .hb-embed-actions {
                        .hb-embed-action {
                            display: none;
                        }
                    }
                }
            }

            .hb-embed-item {
                .hb-embed-actions {
                    .hb-embed-action {
                        &.hb-embed-action__none {
                            display: table-cell;
                        }
                    }
                }
            }
        }

        &.hb-entity-list__inline-mode {

            // the field looks like a list of hb-panel
            //  (no hb-field surrounding shadow + keep hb-panel margin-bottom)
            box-shadow: none;
            > .hb-field__value {
                > .hb-entity-list {
                    > .hb-embed-item {
                        // always show margin from "component/panel"
                        margin: $item-margin;
                    }
                }
            }

            .hb-field__content {
                padding: 0;
            }

            .hb-embed-type-selector {
                display: none;
            }

            .hb-embed-item {
                > .hb-embed-item__header {
                    > .hb-embed-item__controls {
                        > .hb-embed-actions {
                            display: none;
                        }
                    }
                }

                .hb-entity-header {
                    margin: 0;
                }
            }
        }

        // item highlighting with inline-mode
        > .hb-field__value {
            > .hb-entity-list {
                > .hb-embed-item {
                    // no direct descendant operator (>) because there is not yet a defined styling beyond the second nested level
                    >.hb-entity-list__inline-mode {
                        > .hb-field__value {
                            > .hb-entity-list {
                                > .hb-embed-item {
                                    &.hb-embed-item--is_collapsible.hb-js-embed-item--is_focused {
                                        // focus parent item (not the grandparent)
                                        @include focused-item;
                                    }
                               }
                           }
                       }
                    }
                }
            }
        }
    }

    .hb-field__entity-reference-list {
        > .hb-field__content {
            > .hb-embed-type-selector {
                text-align: right;
            }
            > .hb-autocomplete {
                margin-bottom: 0.5*$base-spacing;
            }
        }

        .hb-embed-item {
            box-shadow: none; // remove focusing

            > .hb-embed-item__header {
                > .hb-embed-item__controls {
                    > .hb-embed-actions { display: none; }
                }
            }
        }

        .hb-panel--hidden { display: none; }
    }
    .hb-field__embedded-entity-list {
        margin-bottom: 0;
        @include shadow-container;

        .hb-embed-actions {
            background-color: color(lightgrey1);
        }

        > .hb-field__content {
            @extend %hb-panel__header;

            display: flex;
            flex-direction: column;
            flex-wrap: wrap;

            > .hb-embed-type-selector,
            > .hb-field__label {
                flex: 1 1 auto;
                align-self: center; // vertically
                width: 100%;
            }

            > .hb-field__label {
                flex: 1 1 auto;
                align-self: flex-start;

                .hb-field__title { @extend %hb-panel__title; }
                .hb-field__description { @extend %hb-panel__description; }
            }

            @include media-query(lap-and-up) {
                flex-wrap: nowrap;
                flex-direction: row;

                > .hb-field__label { text-align: left; }
                > .hb-embed-type-selector {
                    text-align: right;
                    width: auto;
                }
            }
        }

        &.hb-field__label--hidden {
            > .hb-field__content {
                > .hb-field__label { display: none; }
            }
        }
        &.hb-field__title--hidden {
            > .hb-field__content {
                .hb-field__title { display: none; }
            }
        }
        &.hb-field__description--hidden {
            > .hb-field__content {
                .hb-field__description { display: none; }
            }
        }
    }
    /** embed/reference styles end here */

    @include media-query(palm) {
        .primary-activities .activities-list__more li {
            display: block;
        }
    }

    @include media-query(lap-and-up) {
        .controls-bottom {
            padding: 0;
            margin: 0;

            border: none;
            box-shadow: none;
        }

        .controls-layout {
            height: 0;
        }
    }

    @content;
}

@mixin focused-item() {
    position: relative;
    @include zindex("base", 1);

    // pseudo-element prevents siblings from hiding outline on adjacent sides
    &:before {
        content: "";
        position: absolute;
        top: 0; right: 0; bottom: 0; left: 0;
        z-index: -1;
        box-shadow: 0 0 1px 3px color(outline);
    }
}