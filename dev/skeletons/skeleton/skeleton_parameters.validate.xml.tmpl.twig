<?xml version="1.0" encoding="UTF-8"?>
<ae:configurations xmlns="http://agavi.org/agavi/config/parts/validators/1.0" xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0">
    <ae:configuration>
        <validators>
            <validator class="and" depends="skeleton_name_{{new_skeleton_name}}">
                <ae:parameter name="description">Creates a new empty skeleton in: %core.skeleton_dir%</ae:parameter>

                <!-- <validator class="skeleton_generator">
                    <ae:parameter name="value">Your\Custom\{{new_skeleton_name|as_studly_caps}}Generator</ae:parameter>
                </validator> -->

<!--

These are validators that provide the parameters that are used for rendering
all '.tmpl.twig' files. You can use the validator 'dialog' that wraps the
actual validator to use (specified by the dialog[validator] parameter).
The dialog validator asks users for a value when the argument was not given
on the command line via '-argument_name value' or the value is invalid.

It is important to to set a 'target_path' parameter as that is the location
where the files are put. If you can't provide one via CLI or validator, then
you should create a ISkeletonGenerator implementing generator class, that
handles necessary setup steps and declare that generator above with the
'skeleton_generator' validator.

-->

<!--
                <validator class="dialog">
                    <argument>some_twig_variable</argument>
                    <ae:parameter name="pattern">/^[A-Za-z0-9_-]{3,120}$/</ae:parameter>
                    <ae:parameter name="match">true</ae:parameter>
                    <ae:parameter name="dialog">
                        <ae:parameter name="validator">AgaviRegexValidator</ae:parameter>
                        <ae:parameter name="attempts">5</ae:parameter>
                        <ae:parameter name="default">SomeDefaultValue</ae:parameter>
                        <ae:parameter name="introduction"><![CDATA[<info>Informational text!</info>]]></ae:parameter>
                    </ae:parameter>
                </validator>

                <validator class="dialog">
                    <argument>vendor_name</argument>
                    <ae:parameter name="dialog">
                        <ae:parameter name="default">Project</ae:parameter>
                    </ae:parameter>
                </validator>

                <validator class="set">
                    <argument>target_path</argument>
                    <ae:parameter name="value">%core.skeleton_dir%/fixed/target/path</ae:parameter>
                </validator>
-->

            </validator>
        </validators>
    </ae:configuration>
</ae:configurations>
