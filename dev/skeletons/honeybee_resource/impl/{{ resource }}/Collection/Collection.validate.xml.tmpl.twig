<?xml version="1.0" encoding="UTF-8"?>
<ae:configurations
    xmlns="http://agavi.org/agavi/config/parts/validators/1.0"
    xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0"
    parent="%core.module_dir%/{{ vendor }}_{{ package }}/config/validators.xml">
    <ae:configuration>
        <validators translation_domain="{{ vendor_prefix }}.{{ package_prefix }}.{{ resource_prefix }}.errors">
            <validator class="Honeybee\FrameworkBinding\Agavi\Validator\ListConfigValidator" name="invalid_list_config" required="true">
                <ae:parameter name="default_limit">50</ae:parameter>
            </validator>
        </validators>

        <validators method="write" translation_domain="{{ vendor_prefix }}.{{ package_prefix }}.{{ resource_prefix }}.errors">
            <validator class="Honeybee\FrameworkBinding\Agavi\Validator\AggregateRootTypeCommandValidator" name="invalid_{{ resource_prefix }}" required="true">
                <arguments base="create_{{ resource_prefix }}" />
                <error>Invalid command payload given.</error>
                <ae:parameter name="aggregate_root_type">{{ vendor_prefix }}.{{ package_prefix }}.{{ resource_prefix }}</ae:parameter>
                <ae:parameter name="command_implementor">{{ vendor }}\{{ package }}\{{ resource }}\Model\Task\Create{{ resource }}\Create{{ resource }}Command</ae:parameter>
                <!--
                These attributes will be ignored. Alternatively you can use an attribute_whitelist
                to select which attributes are acceptable to your command payload.
                <ae:parameter name="attribute_blacklist">
                    <ae:parameter>auth_token</ae:parameter>
                    <ae:parameter>password_hash</ae:parameter>
                    <ae:parameter>token_expire_date</ae:parameter>
                </ae:parameter>
                -->
            </validator>
        </validators>
    </ae:configuration>
</ae:configurations>
