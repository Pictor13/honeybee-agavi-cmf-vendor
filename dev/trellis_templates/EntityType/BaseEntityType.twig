<?php

namespace {{ namespace }};

use Trellis\Common\Options;
use {{ namespace }};
use {{ parent_implementor }};

/**
 * Serves as the base class to the '{{ type_name }}' type skeleton.
 */
abstract class {{ class_name }} extends {{ parent_class_name }}
{
    /**
     * Creates a new '{{ class_name }}' instance.
     */
    public function __construct()
    {
        parent::__construct(
            '{{ type_name }}',
            [
            {%- for attribute in attributes %}
                {%- if attribute.options|length > 0 %}

                new {{ attribute.class_name }}(
                    '{{ attribute.name }}',
                    $this,
                    {{ attribute.options|raw }}
                ),

                {%- else %}

                new {{ attribute.class_name }}('{{ attribute.name }}', $this),

                {%- endif %}
            {%- endfor %}

            ]
            {%- if options|length > 0 %},
            new Options(
                {{ options|raw }}
            ){%- endif %}

        );
    }

    /**
     * Returns the EntityInterface implementor to use when creating new entities.
     *
     * @return string Fully qualified name of an EntityInterface implementation.
     */
    public static function getEntityImplementor()
    {
        return {{ entity_implementor|raw }};
    }
}
